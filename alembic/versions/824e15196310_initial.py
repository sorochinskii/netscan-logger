"""initial

Revision ID: 824e15196310
Revises: None
Create Date: 2022-09-29 17:11:16.202007

"""

# revision identifiers, used by Alembic.
from alembic import context, op
import sqlalchemy_utils
import sqlalchemy as sa
revision = '824e15196310'
down_revision = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scan',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('scan_time_start', sa.DateTime(), nullable=True),
                    sa.Column('scan_time_finish',
                              sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('device',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('ipv4', sa.Boolean(), nullable=True),
                    sa.Column('ip', sqlalchemy_utils.types.ip_address.IPAddressType(
                        length=50), nullable=True),
                    sa.Column('mac', sa.String(), nullable=True),
                    sa.Column('vendor', sa.String(), nullable=True),
                    sa.Column('hostname', sa.String(), nullable=True),
                    sa.Column('Scan', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['Scan'], ['scan.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('device')
    op.drop_table('scan')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
